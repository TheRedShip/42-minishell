=============================================================================================
SIGNAUX + EXIT STATUS
=============================================================================================
CTRL C ✅
	-> SIG_INT
	(New line)
	$? = 130
---------------------------------------------------------------------------------------------ok
CTRL D ✅
	-> EOF
	(Quitte shell si ligne vide en printant "exit")
	$? = 130
---------------------------------------------------------------------------------------------ok
CTRL \ ✅
	-> SIG_QUIT
	(Ne fais rien)
---------------------------------------------------------------------------------------------ok
cat
CTRL D ✅
	-> quitte sans \n
	$? = 0
---------------------------------------------------------------------------------------------ok
cat
CTRL C ✅
	-> quitte avec ^C\n
	$? = 130
---------------------------------------------------------------------------------------------ok
cat
CTRL \
	-> quitte avec ^\Quit (core dumped)\n
	$? = 131 ✅
---------------------------------------------------------------------------------------------ok
quand on fait command invalide
	$? = 127 ✅
---------------------------------------------------------------------------------------------ok
invalid command
Enter
	-> doit garder l'exit code du command not found + $? = 127✅
---------------------------------------------------------------------------------------------ok
cat | ls
CTRL C
	-> fais le ls avant le cat et attend (prompt du cat)
	-> $? = 0 ✅
---------------------------------------------------------------------------------------------KO pas testable encore
invalid command
$EMPTY
	-> doit reset l'exit code + $? = 0 ✅ (non géré)
---------------------------------------------------------------------------------------------ok
expr $? + $? -> dépend de la valeur de $?
expr $? + $? -> 0
expr $? + $? -> 2
expr $? + $? -> 0
expr $? + $? -> 2 ✅
---------------------------------------------------------------------------------------------ok
mkdir haha
./haha
	-> $? = 126 ✅
---------------------------------------------------------------------------------------------ok
tkt | ls | tkt
	-> $? = 127 ✅
---------------------------------------------------------------------------------------------KO pas testable encore (sera ok avec les pipes)
mkdir haha
mkdir haha
	-> $? = 1 ✅
=============================================================================================ok
REDIRECTION
=============================================================================================KO pas testable encore !!
echo test >1 > 2 >3
	-> créer tous les fichiers mais met le résultat seulement dans 3 ✅
---------------------------------------------------------------------------------------------ok
echo test >1 > 2 >3
<2<3 grep test
	-> re lis que le fichier 3 ✅
---------------------------------------------------------------------------------------------ok
echo test >1 > 2 >3
<2 cat >1 <3
	-> met le contenu du 1 ✅
---------------------------------------------------------------------------------------------ok
<mdr | >lol < mdr > mdr | <mdr
	-> crée lol mais pas mdr, + 3 messages d'erreurs à mettre ✅
---------------------------------------------------------------------------------------------ok
>out1>out2>out3<vsupp>out4 cat -e
	-> Créer out1, out2, out3 et mettre le contenu de vsupp dans out4
---------------------------------------------------------------------------------------------ok
<<$USER (On va dire que $USER = user)
user
oui
$USER
	-> quitte qu'a $USER et non sa valeur ✅
---------------------------------------------------------------------------------------------ok
<<oui
CTRL D
	bash: warning: here-document at line 2 delimited by end-of-file (wanted `oui')
	-> $? = 0 ✅
---------------------------------------------------------------------------------------------ok
<<oui
CTRL C
	\n
	-> $? = 130 ✅
---------------------------------------------------------------------------------------------ok
<<oui
CTRL \
	Fais rien
	-> $? = 0 ✅
---------------------------------------------------------------------------------------------ok
>tkt <<oui cat
CTRL C
	-> ne pas créer tkt + $? = 130 ✅
---------------------------------------------------------------------------------------------ok
<<'<lol'
	-> limiter <lol ✅
---------------------------------------------------------------------------------------------ok
<<""
	-> doit quitter au \n ✅
---------------------------------------------------------------------------------------------ok
cat <<HEREDOC
oi
HEREDOC
	-> doit cat le contenu du heredoc ✅
---------------------------------------------------------------------------------------------ok
cat <<HERE <<DOC
oi
HERE
time
DOC
	-> doit seulement cat le contenu du deuxième heredoc ✅
---------------------------------------------------------------------------------------------ok
cat <<HERE | ls
oi
HERE
	-> rempli le heredoc et fait le ls ✅
---------------------------------------------------------------------------------------------
cat <minishell.h <<HERE <missing | ls
HERE
	-> rempli le heredoc, fait la redir et fait le ls ✅
---------------------------------------------------------------------------------------------
cat <minishell.h <<HERE | cat
HERE 
	-> rempli le heredoc et ne fait pas le cat ✅ (non géré)
---------------------------------------------------------------------------------------------
cat <minishell.h <<HERE <missing <<DOC | echo oi
HERE
DOC
	-> fait les deux heredoc, fait la redir et affiche oi ✅
---------------------------------------------------------------------------------------------
<< echo oi
echo
	-> rempli le heredoc et essaye d'exectuer oi ✅
---------------------------------------------------------------------------------------------
<lol
	-> infile invalid + $? = 1 ✅
---------------------------------------------------------------------------------------------
echo hi <
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
cat    <| ls
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
echo hi | >
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
echo hi | > >>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
echo hi | < |
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<<<
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
>>>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
><
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
>>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<<
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
><<
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
><<<
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
>><<<
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
>>><<<
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<>>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<>>>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<<>>>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<<<>>>
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
For these tests, you will need to clone this repo (https://github.com/LucasKuhn/minishell_tester) and only save the test_files directory and put it in you minishell directory.

grep hi <./test_files/infile		OKKKKK
	-> hi + $? = 0 ✅
grep hi "<infile" < ./test_files/infile
	-> grep: <infile: No such file or directory + $? = 2 ✅
echo hi <./test_files/infile bye bye
	-> hi bye bye + $? = 0 ✅
grep hi <./test_files/infile_big <./test_files/infile
	-> hi + $? = 0 ✅
echo <"./test_files/infile" "bonjour       42"
	-> bonjour	42 + $? = 0 ✅
cat <"./test_files/file name with spaces"
	-> affiche le contenu du fichier + $? = 0 ✅
cat <./test_files/infile_big ./test_files/infile
	-> affiche seulement le contenu du fichier "infile" + $? = 0 ✅
cat <"1""2""3""4""5"
	-> 12345: No such file or directory + $? = 1 ✅
echo <"./test_files/infile" <missing <"./test_files/infile"
	-> missing: No such file or directory +$? = 1 ✅
echo <missing <"./test_files/infile" <missing
	-> missing: No such file or directory +$? = 1 ✅
cat <"./test_files/infile"
	-> affiche le contenu du fichier "infile" + $? = 0 ✅
echo <"./test_files/infile_big" | cat <"./test_files/infile"
	-> affiche seulement le contenu du fichier "infile" + $? = 0 
echo <"./test_files/infile_big" | cat "./test_files/infile"
	-> affiche seulement le contenu du fichier "infile" + $? = 0 
echo <"./test_files/infile_big" | echo <"./test_files/infile"
	-> \n + $? = 0 
echo hi | cat <"./test_files/infile"
	-> affiche seulement le contenu du fichier "infile" + $? = 0 
echo hi | cat "./test_files/infile"
	-> affiche seulement le contenu du fichier "infile" + $? = 0 
cat <"./test_files/infile" | echo hi
	-> hi + $? = 0 
cat <"./test_files/infile" | grep hello
	-> hello + $? = 0 
cat <"./test_files/infile_big" | echo hi
	-> hi + $? = 0 
cat <missing
	-> missing: No such file or directory + $? = 1 
cat <missing | cat
	-> missing: No such file or directory + $? = 0 
cat <missing | echo oi
	-> affiche oi et missing: No such file or directory+ $? = 0 
cat <missing | cat <"./test_files/infile"
	-> missing: No such file or directory et affiche le contenu du fichier "infile" + $? = 0 
echo <123 <456 hi | echo 42
	-> affiche 42 et 123: No such file or directory + $? = 0 ❌ (too many error messages)
ls >./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et fait le ls)
ls >         ./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et fait le ls)
echo hi >         ./outfiles/outfile01 bye
	-> bash: ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et affiche hi bye en trop)
ls >./outfiles/outfile01 >./outfiles/outfile02
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et fait le ls)
ls >./outfiles/outfile01 >./test_files/invalid_permission
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code)
ls >"./outfiles/outfile with spaces"
	-> ./outfiles/outfile with spaces: No such file or directory + $? = 1 ❌ (wrong exit code et fait le ls)
ls >"./outfiles/outfile""1""2""3""4""5"
	-> ./outfiles/outfile12345: No such file or directory + $? = 1 ❌ (wrong exit code et fait le ls)
ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02"
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et fait le ls)
ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code)
cat <"./test_files/infile" >"./outfiles/outfile01"
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et affiche le contenu du fichier "infile")
echo hi >./outfiles/outfile01 | echo bye
	-> affiche bye et ./outfiles/outfile01: No such file or directory + $? = 0 ❌ (affiche hi en trop)
echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye
	-> affiche bye et ./outfiles/outfile01: No such file or directory + $? = 0 ❌ (too many error messages et affiche hi en trop)
echo hi | echo >./outfiles/outfile01 bye
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et affiche bye en trop)
echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et affiche bye en trop)
echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02
	-> ./outfiles/outfile01 et ./outfiles/outfile02: No such file or directory + $? = 1 ❌ (wrong exit code et affiche hi et bye en trop)
echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye
	-> affiche bye et ./outfiles/outfile01: No such file or directory + $? = 0 ✅
echo hi >./test_files/invalid_permission | echo bye
	-> affiche bye + $? = 0 ✅
echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye
	-> affiche bye et ./outfiles/outfile01: No such file or directory + $? = 0 ❌ (affiche hi en trop)
echo hi | echo bye >./test_files/invalid_permission
	-> ne fait rien + $? = 0 ✅
echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code)
echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et affiche bye en trop)
cat <"./test_files/infile" >./test_files/invalid_permission
	-> ne fait rien + $? = 0 ✅
cat >./test_files/invalid_permission <"./test_files/infile"
	-> ne fait rien + $? = 0 ✅
cat <missing >./outfiles/outfile01
	-> missing: No such file or directory + $? = 1 ✅
cat >./outfiles/outfile01 <missing
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (too many error messages)
cat <missing >./test_files/invalid_permission
	-> missing: No such file or directory + $? = 1 ✅
cat >./test_files/invalid_permission <missing
	-> missing: No such file or directory + $? = 1 ✅
cat >./outfiles/outfile01 <missing >./test_files/invalid_permission
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (too many error messages)
ls >>./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et fait le ls)
ls >>      ./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et fait le ls)
ls >>./outfiles/outfile01 >./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et fait le ls)
ls >./outfiles/outfile01 >>./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et fait le ls)
ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et fait le ls)
ls >>./outfiles/outfile01 >>./outfiles/outfile02
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et fait le ls)
ls >>./test_files/invalid_permission
	-> ne fait rien + $? = 0 ✅
ls >>./test_files/invalid_permission >>./outfiles/outfile01
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et fait le ls)
ls >>./outfiles/outfile01 >>./test_files/invalid_permission
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code)
ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et fait le ls)
ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02
	-> missing: No such file or directory + $? = 1 ❌ (too many error messages)
ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing
	-> ./outfiles/outfile02: No such file or directory + $? = 1 ❌ (too many error messages)
echo hi >>./outfiles/outfile01 | echo bye
	-> bye et ./outfiles/outfile01: No such file or directory + $? = 0 ❌ (affiche hi en trop)
echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye
	-> bye et ./outfiles/outfile01: No such file or directory + $? = 0 ❌ (too many error messages et affiche hi en trop)
echo hi | echo >>./outfiles/outfile01 bye
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et affiche bye en trop)
echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code, too many error messages et affiche bye en trop)
echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02
	-> ./outfiles/outfile02 et outfile01: No such file or directory + $? = 1 ❌ (wrong exit code et affiche bye et hi en trop)
echo hi >>./test_files/invalid_permission | echo bye
	-> bye + $? = 0 ✅
echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye
	-> bye et ./outfiles/outfile01: No such file or directory + $? = 0 ❌ (affiche hi en trop)
echo hi | echo bye >>./test_files/invalid_permission
	-> ne fait rien + $? = 0 ✅
echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission
	-> ./outfiles/outfile01: No such file or directory + $? = 1 ❌ (wrong exit code)
cat <minishell.h>./outfiles/outfile
	-> ./outfiles/outfile: No such file or directory + $? = 1 ❌ (wrong exit code et affiche le fichier minishell.h)
cat <minishell.h|ls
	-> minishell.h: No such file or directory et fait le ls + $? = 0 ✅
=============================================================================================
VARIABLE + QUOTE
============================================================================================= TOUT OKKKKK
export TEST=coucou ✅
echo $TEST
	-> coucou ✅
echo '$TEST'
	-> $TEST ✅
echo "$TEST"
	-> coucou ✅
echo '"$TEST"'
	-> "$TEST" ✅
echo "'$TEST'"
	-> 'coucou' ✅
echo "test  $TEST  test"
	-> test  coucou  test ✅
echo 'test  $TEST  test'
	-> test  $TEST  test ✅
echo "'test  $TEST  test'"
	-> 'test  coucou  test' ✅
echo '"test  $TEST  test"'
	-> "test  $TEST  test" ✅
echo "$TEST  t  $TEST"
	-> coucou  t  coucou ✅
echo $TEST$TEST
	-> coucoucoucou ✅
echo "test"'test'test"test"
	-> testtesttesttest ✅
---------------------------------------------------------------------------------------------
echo hello""world
	-> helloworld ✅
echo - "" "  " hello
	-> -     hello ✅
echo ""
	-> \n ✅
echo ''
	-> \n ✅
echo "exit_code -> $? user -> $USER home -> $HOME"
	-> exit_code -> 0 user -> user home -> nfs/homes/user ✅
echo 'exit_code -> $? user -> $USER home -> $HOME'
	-> exit_code -> $? user -> $USER home -> $HOME ✅
echo $?
	-> 0 ✅
echo "$"
	-> $ ❌ FAILLLLLLLLLLLLLLLL
echo '$'
	-> $ ✅
echo $
	-> $ ❌
---------------------------------------------------------------------------------------------
export lol="echo <lol"
$lol
	-> print <lol et pas d'erreur de infile ✅ (non géré)
---------------------------------------------------------------------------------------------
export lol="echo <lol"
"$lol"
	-> command 'echo <lol' not found + $? = 127 ✅
---------------------------------------------------------------------------------------------
echo
echo $?coucou
	-> 0coucou ✅
=============================================================================================
PIPE
=============================================================================================
|
	-> syntax error + $? = 2 
---------------------------------------------------------------------------------------------
$tkt
	-> \n + $? = ✅127 (wrong exit code mais oklm)
---------------------------------------------------------------------------------------------
$tkt | $tkt
	-> \n + $? = 0 ✅
---------------------------------------------------------------------------------------------
$tkt |
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
lol | |
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
>|
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
echo hi |  "|"
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
<lol | |
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
cat | ls
	-> affiche le résultat de ls et nous permet d'écrire 1 ligne ✅ (affichage de 1 ligne vide)
---------------------------------------------------------------------------------------------
cat | cat | cat | cat | ls
	-> affiche le résultat de ls et nous permet d'écrire 4 lignes ✅ (affichage de 4 lignes vides)
---------------------------------------------------------------------------------------------
echo lol | lol | lol
	-> affiche deux fois lol: command not found + $? = 127✅
---------------------------------------------------------------------------------------------
| echo oui
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
| |
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
| $
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
| >
	-> syntax error + $? = 2 ✅
---------------------------------------------------------------------------------------------
env | sort | grep -v SHLVL | grep -v ^_
	-> affiche l'env dans l'ordre alphabétique en enlevant les variables d'environnement SHLVL et _ ✅
---------------------------------------------------------------------------------------------
export | sort | grep -v SHLVL | grep -v "declare -x _" | grep -v "PS.="
	-> fait un export classique en enlevant la ligne declare -x _ et la ligne PS.= ✅
---------------------------------------------------------------------------------------------
cat ./test_files/infile_big | grep oi
	-> affiche seulement les parties du texte où oi est présent ✅
---------------------------------------------------------------------------------------------
cat minishell.h | grep ");"$
	-> affiche seulement les lignes finissant par ); ✅
---------------------------------------------------------------------------------------------
export GHOST=123 | env | grep GHOST
	-> ne fais rien ✅
=============================================================================================
ECHO
=============================================================================================
echo tkt
	-> tkt\n ✅
---------------------------------------------------------------------------------------------
echo tkt                                tkt
	-> tkt tkt\n ✅
---------------------------------------------------------------------------------------------
echo "tkt                                tkt"
	-> tkt                                tkt\n ✅
---------------------------------------------------------------------------------------------
echo 'tkt                                tkt'
	-> tkt                                tkt\n ✅
---------------------------------------------------------------------------------------------
echo -n tkt
	-> tkt ✅
---------------------------------------------------------------------------------------------
echo -nnnnnnnnnnnnnnnnnnnnnnnnn tkt
	-> tkt ✅
---------------------------------------------------------------------------------------------
echo -nnnnnnnnnnnnnnnnnnnnnnnnn -n -n -n -n tkt
	-> tkt ✅
---------------------------------------------------------------------------------------------
echo -nnnnnnnnnnn -n -n -n -n tkt -n
	-> tkt -n ✅
=============================================================================================
PWD
=============================================================================================
pwd
	-> affiche le répertoire courant
pwd lol
	-> pwd fonctionne sans problème et $? = 0 ✅
=============================================================================================
CD
=============================================================================================
mkdir haha
chmod 000 haha
cd haha
	-> $? = 1 ✅
---------------------------------------------------------------------------------------------
(initial emplacement : /tmp/minishell)
cd srcs
echo pwd : $PWD , old pwd : $OLDPWD
	-> pwd : /tmp/minishell/srcs , old pwd : /tmp/minishell
unset PWD
cd ..
echo pwd : $PWD , old pwd : $OLDPWD
	-> pwd : /tmp/minishell , old pwd : ✅ (non géré)
---------------------------------------------------------------------------------------------
(initial emplacement : /tmp/minishell
cd .. | exit
pwd
	-> /tmp/minishell ✅
---------------------------------------------------------------------------------------------
cd $PWD
	-> si $PWD n'est pas unset, cd dans le répertoire courant
	-> si $PWD unset : too feew arguments + $? = 1 (bash fait un cd vers ~) ✅
---------------------------------------------------------------------------------------------
cd $PWD hi
	-> too many arguments + $? = 1 ✅
---------------------------------------------------------------------------------------------
cd 123123
	-> si 123123 n'existe pas : No such file or directory + $? = 1 ✅
=============================================================================================
EXIT
=============================================================================================
exit
	-> on quitte le programme et on met $? à 0 ✅
---------------------------------------------------------------------------------------------
exit 55
	-> on quitte le programme et on met $? à 55 ✅
---------------------------------------------------------------------------------------------
exit -1
	-> on quitte le programme et on met $? à 255 ✅
---------------------------------------------------------------------------------------------
exit 255
	-> on quitte le programme et on met $? à 255 ✅
---------------------------------------------------------------------------------------------
exit 55 54 323
	bash: exit: too many arguments
	-> on quitte pas le programme et on met $? à 1 ✅
---------------------------------------------------------------------------------------------
exit p
	bash: exit: p: numeric argument required
	-> on quitte le programme et on met $? à 2 ✅
---------------------------------------------------------------------------------------------
exit p 152 452
	bash: exit: p: numeric argument required
	-> on quitte le programme et on met $? à 2 ✅
---------------------------------------------------------------------------------------------
exit 55 p 323
	bash: exit: too many arguments
	-> on quitte pas le programme et on met $? à 1 ✅
---------------------------------------------------------------------------------------------
exit nb (nb <= -9223372036854775808 ou nb >= 9223372036854775807)
	bash: exit: p: numeric argument required
	-> on quitte le programme et on met $? à 2 ✅
---------------------------------------------------------------------------------------------
exit +100
exit "+100"
exit +"100"
	-> exit + $? = 100 ✅
---------------------------------------------------------------------------------------------
exit -100
exit "-100"
exit -"100"
	-> exit + $? = 156 ✅
=============================================================================================
EXPORT
=============================================================================================
export hello
	-> export la variable hello sans contenu
---------------------------------------------------------------------------------------------
export a =6_b
	bash: export: `=6_b': not a valid identifier
	-> $? = 1 ✅
---------------------------------------------------------------------------------------------
export a= 6_b
	bash: export: `6_b': not a valid identifier
	-> $? = 1 ✅
---------------------------------------------------------------------------------------------
export 6_a=b
	bash: export: `6_a=b': not a valid identifier
	-> $? = 1 ✅
---------------------------------------------------------------------------------------------
export =
	bash: export: `=': not a valid identifier
	-> $? = 1 ✅
---------------------------------------------------------------------------------------------
export -lol
	-> invalid option + $? = 2 ✅ (sujet : export with no options donc pas géré et $? = 1)
---------------------------------------------------------------------------------------------
export 0oui
	-> invalid identifier + $? = 1 ✅
---------------------------------------------------------------------------------------------
export COUCOU | ls
	-> $COUCOU n'est pas créé et le ls se fait normalement ✅
---------------------------------------------------------------------------------------------
export tkt+=oui
	-> $tkt = oui ✅
---------------------------------------------------------------------------------------------
export tkt=oui
export tkt
	-> $tkt = oui ✅
---------------------------------------------------------------------------------------------
export tkt=oui 1mdr
	-> invalid identifier + $? = 1 et $tkt = oui ✅
---------------------------------------------------------------------------------------------
export HELLO=123 A- WORLD=456
unset  HELLO A- WORLD ✅
---------------------------------------------------------------------------------------------
export UNO=1 DOS-2 TRES=3 | env | grep TRES ✅
---------------------------------------------------------------------------------------------
export HELLO=123
	-> export la variable HELLO avec comme contenu : "123" ✅
---------------------------------------------------------------------------------------------
export A-
	-> invalid identifier + $? = 1 ✅
---------------------------------------------------------------------------------------------
export HELLO=123 A
	-> export la variable HELLO avec comme contenu : "123" et la variable A sans contenu ✅
---------------------------------------------------------------------------------------------
export HELLO="123 A-"
	-> export la variable HELLO avec comme contenu : "123 A-" ✅
---------------------------------------------------------------------------------------------
export hello world
	-> export les variables hello et world sans contenu ✅
---------------------------------------------------------------------------------------------
export HELLO-=123
	-> invalid identifier + $? = 1 ✅
---------------------------------------------------------------------------------------------
export 123
	-> invalid identifier + $? = 1 ✅
=============================================================================================
UNSET
=============================================================================================
unset
	-> ne fais rien ✅
---------------------------------------------------------------------------------------------
unset HELLO
	-> ne fais rien si HELLO n'existe pas, sinon unset HELLO
---------------------------------------------------------------------------------------------
unset HELLO1 HELLO2
	-> ne fais rien si HELLO1 et HELLO2 n'existent pas, sinon unset HELLO1 et HELLO2
---------------------------------------------------------------------------------------------
unset 6_a
	bash: export: `6_a=b': not a valid identifier
	-> $? = 1 ✅
---------------------------------------------------------------------------------------------
unset -lol
	-> invalid option + $? = 2 ✅ (sujet : export with no options donc pas géré et $? = 1)
---------------------------------------------------------------------------------------------
unset 0oui
	-> invalid identifier + $? = 1 ✅
---------------------------------------------------------------------------------------------
unset COUCOU | ls
	-> COUCOU existe toujours ✅
---------------------------------------------------------------------------------------------
unset tkt 1mdr
	-> invalid identifier + $? = 1 + $tkt n'existe plus ✅
---------------------------------------------------------------------------------------------
unset HELLO= ✅
---------------------------------------------------------------------------------------------
unset A- ✅
=============================================================================================
ENV
=============================================================================================
env -l
	-> erreur option + $? = 125 ✅
---------------------------------------------------------------------------------------------
env coucou
	-> erreur argument + $? = 127 ✅
---------------------------------------------------------------------------------------------
clear | env -l
	-> $? = 125 ✅
=============================================================================================
OTHERS
=============================================================================================
echo "hi" | cat | cat | cat | cat | cat | cat | cat
ps -a
	-> ne doit pas y avoir un processus zombie cat ✅
---------------------------------------------------------------------------------------------
unset USER
unset PATH
unset PWD
/bin/ls
	-> doit faire un ls ✅
	
	
	
	
unset marche pas avec les variables pas set zebi

